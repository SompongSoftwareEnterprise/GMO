#!/usr/bin/env ruby


def test_name(file)
	"#{File.basename File.dirname file}/#{File.basename file, '.js'}"
end

available_files = Dir['/vagrant/casper/*/*Test.js']

Dir.chdir "/vagrant/casper"

def color(x)
	"\e[#{x}m#{yield}\e[0m"
end

def run_test(filename)
	data = File.read(filename)
	puts
	puts "#{color('1;32') { '==> Running test:' }} #{File.basename filename}"
	if data =~ /(\/\*\*(.*?)\*\/)/m
		comment = $1
		fixture_list = [ ]
		comment.scan(/@fixture (\S+)/) do
			fixture_list << $1
		end
		if !fixture_list.empty?
			system "gmo-load-fixtures #{fixture_list.join(' ')}"
		end
		puts comment
	end
	system "casperjs test #{filename} --xunit=/tmp/#{File.basename(filename, '.js')}.xml"
end

if ARGV.empty?
	puts "Please enter testcase name, or 'all' to test all."
	puts "Available tests:"
	puts available_files.map { |file| '- ' + test_name(file) }
else
	if ARGV == ['all']
		test_files = available_files
	else
		test_files = ARGV.map { |arg|
			available_files.find { |file| test_name(file) == arg } or raise "Testcase not found"
		}
	end
	test_files.each do |filename|
		run_test(filename)
	end
end










