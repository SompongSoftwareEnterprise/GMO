#!/usr/bin/env ruby

require 'yaml'

def load_fixtures(filename)
	fixtures = [ ]
	File.open(filename) do |io|
		YAML.each_document(io) do |doc|
			read_fixture(doc, fixtures)
		end
	end
	fixtures
end

def read_fixture(doc, fixtures)
	if doc['table']
		fixtures << doc
	end
end

def fixtures_to_sql(fixtures)
	fixtures.map { |fixture| fixture_to_sql(fixture) }
end

class String
	def table_name
		"`#{self}`"
	end
	def sql_escape
		"'#{self.gsub('\'', '\\\'')}'"
	end
end

def fixture_to_sql(fixture)
	keys = fixture['data'].keys
	columns = keys.map(&:table_name).join(', ')
	values = keys.map { |k| fixture['data'][k] }.map(&:to_s).map(&:sql_escape).join(', ')
	"INSERT INTO #{fixture['table']}\n\t(#{columns})\n\tVALUES (#{values});\n"
end

fixtures = load_fixtures('/vagrant/casper/fixtures/entrepreneur-1.yml')
puts fixtures_to_sql(fixtures)
exit

available_files = Dir['/vagrant/casper/*Test.js']

def run_test(filename)
	system "casperjs test #{filename} --fail-fast"
end

if ARGV.empty?
	puts "Please enter testcase name, or 'all' to test all."
	puts "Available tests:"
	puts available_files.map { |file| '- ' + File.basename(file, '.js') }
else
	if ARGV == ['all']
		test_files = available_files
	else
		test_files = ARGV.map { |arg|
			available_files.find { |file| File.basename(file, '.js') == arg } or raise "Testcase not found"
		}
	end
	test_files.each do |filename|
		run_test(filename)
	end
end

